{
  "topics": {
    "query": "sum(rate(kafka_topic_partition_current_offset{topic!~\"__.*\"}[30m])) by (topic)",
    "key": "topic"
  },
  "consumerGroups": {
    "query": "sum(avg_over_time(kafka_consumergroup_lag{consumergroup!~\"ignored.*\", topic!~\"__.*\"}[30m])) by (topic, consumergroup)",
    "topicKey": "topic",
    "groupKey": "consumergroup"
  },
  "services": {
    "stats": {
      "producerRegex": "event.stats.*",
      "consumerGroups": ["stats-service-consumer-1"]
    },
    "gloot-notifications": {
      "producer": [],
      "consumerGroups": ["gloot-notification-service"]
    },
    "public-game": {
      "producer": ["rawPublicGameEvents", "timebased-challenge.events"],
      "consumerGroups": []
    },
    "translator": {
      "producer": ["featureTopic"],
      "consumerGroups": ["translator-service-consumer"]
    },
    "single-round-challenge": {
      "producerRegex": "single-round-challenge.*",
      "consumerGroups": ["single-round-challenge-service"]
    },
    "engagement-leaderboard": {
      "consumerGroups": ["global-leaderboard-service"]
    },
    "latest-winners": {
      "producerRegex": "latest-winners.*",
      "consumerGroups": ["latest-winners-service"]
    },
    "bi-middleware": {
      "consumerGroups": ["bi-consumer"]
    }
  }
}
